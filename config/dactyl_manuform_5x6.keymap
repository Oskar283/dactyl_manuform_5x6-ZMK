#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define ALTAB  4

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <26 27 28>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
            hold-while-undecided;
            hold-while-undecided-linger;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <31 32 33>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
            hold-while-undecided;
            hold-while-undecided-linger;
        };

        altab: alt_tab_enter {
            label = "alt_tab_enter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <20>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB &to 0>;
        };

        altab_x: alt_tab_leave {
            label = "alt_tab_leave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <20>;
            bindings = <&macro_release>, <&kp LCTRL>, <&macro_tap>, <&to 0>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE      &kp F1  &kp F2                &kp N3                 &kp F4        &kp F5                                   &kp F6         &kp F7        &kp F8             &kp F9             &kp F10        &kp F11
&kp TAB        &kp Q   &kp W                 &kp F                  &kp P         &kp B                                    &kp J          &kp L         &kp U              &kp Y              &kp SEMICOLON  &kp MINUS
&kp ESCAPE     &kp A   &hml LEFT_ALT R       &hml LEFT_SHIFT S      &hml LCTRL T  &kp G                                    &kp M          &hmr LCTRL N  &hmr LEFT_SHIFT E  &hmr LALT I        &kp O          &kp SQT
&kp BACKSLASH  &kp Z   &kp X                 &kp C                  &kp D         &kp V                                    &kp K          &kp H         &kp COMMA          &kp DOT            &kp SLASH      &kp DOUBLE_QUOTES
                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                                                                      &kp LEFT_BRACKET   &kp RIGHT_BRACKET
                                                                    &mo 2         &kp SPACE                                &kp BACKSPACE  &lt 1 ENTER
                                                                                  &trans     &kp C_AL_CALCULATOR  &kp DEL  &kp LGUI
                                                                                  &trans     &trans               &trans   &trans
            >;
        };

        SYM {
            bindings = <
&trans     &trans    &trans  &trans    &trans    &trans                        &trans     &trans         &trans        &trans     &trans        &trans
&kp DOT    &kp N1    &kp N2  &kp N3    &kp N4    &kp N5                        &kp N6     &kp N7         &kp N8        &kp N9     &kp N0        &kp A
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PERCENT                   &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp EQUAL  &kp O         &kp A
&kp PIPE   &trans    &trans  &trans    &trans    &trans                        &trans     &trans         &kp LT        &kp GT     &kp QUESTION  &kp PLUS
                     &kp LT  &kp GT                                                                      &kp LBRC      &kp RBRC
                                       &trans    &trans                        &trans     &trans
                                                 &trans       &trans  &trans   &trans
                                                 &trans       &trans  &lt 3 Z  &lt 3 X
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans  &kp SPACE  &kp SPACE
&trans  &trans  &trans  &trans  &trans  &kp E                   &kp HOME  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp END
&trans  &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans    &trans  &kp SPACE  &kp SPACE
                &trans  &trans                                                      &trans    &trans
                                &trans  &trans                  &trans    &trans
                                        &trans  &trans  &trans  &trans
                                        &mo 3   &mo 3   &trans  &trans
            >;
        };

        ADJUST {
            bindings = <
&bootloader  &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                   &trans  &trans  &trans  &trans  &trans            &trans
&trans       &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                  &trans  &trans  &trans  &trans  &kp C_PLAY_PAUSE  &kp K_VOL_UP
&trans       &bt BT_CLR     &bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV     &trans                         &trans  &trans  &trans  &trans  &kp C_NEXT        &kp K_VOL_DN
&trans       &trans         &trans          &trans         &trans         &bootloader                    &trans  &trans  &trans  &trans  &kp C_PREVIOUS    &kp K_MUTE
                            &trans          &trans                                                                       &trans  &trans
                                                           &trans         &trans                         &trans  &trans
                                                                          &trans         &trans  &trans  &trans
                                                                          &trans         &trans  &trans  &trans
            >;
        };

        altab_layer {
            bindings = <
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans                                                        &trans  &trans
                                  &altab_x  &altab_x                    &trans  &trans
                                            &kp TAB   &altab_x  &trans  &trans
                                            &altab_x  &altab_x  &trans  &trans
            >;
        };
    };
};
