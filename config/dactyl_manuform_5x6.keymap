// https://zmk.dev/docs/keymaps/behaviors/mouse-emulation#mouse-emulation-defines

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define ALTAB  4

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <31 32 33 34>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <26 27 28 25>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        altab: alt_tab_enter {
            label = "alt_tab_enter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <20>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB &to 0>;
        };

        altab_x: alt_tab_leave {
            label = "alt_tab_leave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <20>;
            bindings = <&macro_release>, <&kp LCTRL>, <&macro_tap>, <&to 0>;
        };

        SE_CARET: SE_CARET {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RIGHT_BRACKET) &kp SPACE>;
            label = "SE_CARET";
        };

        SE_TILDE: SE_TILDE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RIGHT_BRACKET) &kp SPACE>;
            label = "SE_TILDE";
        };

        SE_E_ACUTE: SE_E_ACUTE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp E>;
            label = "SE_E_ACUTE";
        };

        SE_BACKTICK: SE_BACKTICK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(EQUAL) &kp SPACE>;
            label = "SE_BACKTICK";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_backspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <31 54>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&SE_BACKTICK   &kp F1  &kp F2           &kp F3             &kp F4        &kp F5                                   &kp F6         &kp F7        &kp F8             &kp F9             &kp F10        &kp F11
&kp TAB        &kp Q   &kp W            &kp F              &kp P         &kp B                                    &kp J          &kp L         &kp U              &kp Y              &kp SEMICOLON  &kp SLASH
&kp ESCAPE     &kp A   &hml LEFT_ALT R  &hml LEFT_SHIFT S  &hml LCTRL T  &kp G                                    &kp M          &hmr LCTRL N  &hmr LEFT_SHIFT E  &hmr LALT I        &kp O          &kp BACKSLASH
&kp RA(MINUS)  &kp Z   &kp X            &kp C              &kp D         &kp V                                    &kp K          &kp H         &kp COMMA          &kp DOT            &kp LS(N7)     &kp LS(N2)
                       &kp LS(N8)       &kp LS(N9)                                                                                             &kp LEFT_BRACKET   &kp RIGHT_BRACKET
                                                           &mo 2         &kp SPACE                                &kp BACKSPACE  &lt 1 ENTER
                                                                         &altab     &kp C_AL_CALCULATOR  &kp DEL  &kp LGUI
                                                                         &trans     &trans               &trans   &trans
            >;
        };

        SYM {
            bindings = <
&trans               &trans      &trans           &trans               &trans      &trans                      &trans     &trans      &trans                &trans               &trans         &trans
&trans               &kp N1      &kp N2           &kp N3               &kp N4      &kp N5                      &kp N6     &kp N7      &kp N8                &kp N9               &kp N0         &kp LEFT_BRACKET
&SE_TILDE            &kp LS(N1)  &kp RA(N2)       &kp LS(N3)           &kp RA(N4)  &kp LS(N5)                  &SE_CARET  &kp LS(N6)  &kp LS(BACKSLASH)     &kp LS(N0)           &kp SEMICOLON  &kp SQT
&kp RA(NON_US_BSLH)  &trans      &trans           &trans               &trans      &trans                      &trans     &trans      &kp NON_US_BACKSLASH  &kp LS(NON_US_BSLH)  &kp LS(MINUS)  &kp MINUS
                                 &kp NON_US_BSLH  &kp LS(NON_US_BSLH)                                                                 &kp RA(N7)            &kp RA(N0)
                                                                       &trans      &trans                      &trans     &trans
                                                                                   &trans      &trans  &trans  &trans
                                                                                   &trans      &trans  &mo 3   &mo 3
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans         &trans         &trans  &trans                       &trans    &trans          &trans          &trans        &trans           &trans
&trans  &trans  &kp LC(LS(C))  &kp LC(LS(V))  &trans  &trans                       &trans    &trans          &trans          &trans        &trans           &trans
&trans  &trans  &kp LC(INS)    &kp LS(INS)    &trans  &SE_E_ACUTE                  &kp HOME  &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &kp END
&trans  &trans  &kp LC(C)      &kp LC(V)      &trans  &trans                       &trans    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                &trans         &trans                                                                        &trans          &trans
                                              &trans  &trans                       &trans    &trans
                                                      &trans       &trans  &trans  &trans
                                                      &mo 3        &mo 3   &trans  &trans
            >;
        };

        ADJUST {
            bindings = <
&bootloader  &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                   &trans  &trans  &trans  &trans  &trans            &trans
&trans       &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                  &trans  &trans  &trans  &trans  &kp C_PLAY_PAUSE  &kp K_VOL_UP
&trans       &bt BT_CLR     &bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV     &trans                         &trans  &trans  &trans  &trans  &kp C_NEXT        &kp K_VOL_DN
&trans       &trans         &trans          &trans         &trans         &bootloader                    &trans  &trans  &trans  &trans  &kp C_PREVIOUS    &kp K_MUTE
                            &trans          &trans                                                                       &trans  &trans
                                                           &trans         &trans                         &trans  &trans
                                                                          &trans         &trans  &trans  &trans
                                                                          &trans         &trans  &trans  &trans
            >;
        };

        altab_layer {
            bindings = <
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans    &trans    &trans  &trans  &trans  &trans
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans    &trans    &trans  &trans  &trans  &trans
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans    &trans    &trans  &trans  &trans  &trans
&altab_x  &trans  &trans  &trans  &trans    &trans                      &trans    &trans    &trans  &trans  &trans  &trans
                  &trans  &trans                                                            &trans  &trans
                                  &altab_x  &altab_x                    &altab_x  &altab_x
                                            &kp TAB   &altab_x  &trans  &trans
                                            &altab_x  &altab_x  &trans  &trans
            >;
        };
    };
};
